import java.nio.file.Files
import java.nio.file.Paths

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.13/samples
 */
// project.task("태스크 이름") + 클로져
// task + 태스크 이름 + 클러져
tasks.register('prepTask') {
    println "configuration prepTask"
    doLast {
        println "Doing preparation"
    }
}

def publishDockerImageTask = tasks.register('publishDockerImage') {
    ext.version = "1.0.0"
    def customVariable = "abc"

    println "customVariable ${customVariable}"

    doFirst {
        println "publishing DockerImage"
    }
}

def publishVersion = publishDockerImageTask.get().version

// 기존에는 task + 태스크 이름(dependsOn: 의존성 task)
tasks.register('deployingDockerImage') {
    dependsOn publishDockerImage

    // true면 아래 doFirst 실행, 아니면 실행 안함
    onlyIf {
        publishVersion == "1.0.0"
    }

    doFirst {
        println "deployingDockerImage DockerImage"
    }
}

tasks.register('cleanUp') {
    doFirst {
        println "cleaning up..."
    }
}

def projectDirPath = project.projectDir.toString()

tasks.register('fileTask') {
    doLast {
        // def file = project.file('fileTaskSample.txt')
        // file.text = 'Hello, Gradle!'
        // println ~
        // 미리 저장된 변수(projectDirPath)를 사용하여 파일 경로를 생성합니다.
        def path = Paths.get(projectDirPath, "fileTaskSample.txt")
        Files.write(path, "Hello, Gradle".getBytes("UTF-8"))
        println "Created file at ${path.toAbsolutePath()}"
    }
}

deployingDockerImage.finalizedBy cleanUp

defaultTasks "deployingDockerImage"